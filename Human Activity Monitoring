#random forest

import pandas as pd
import time
X= pd.read_csv('dataset-har-PUC-Rio-ugulino.csv',delimiter=';')
X.gender = X.gender.map({'Man':0,'Woman':1})
X['how_tall_in_meters']=[X['how_tall_in_meters'][i].replace(',','.') for i in range(len(X['how_tall_in_meters']))]
X['body_mass_index']=[X['body_mass_index'][i].replace(',','.') for i in range(len(X['body_mass_index']))]
X.dropna()
X['how_tall_in_meters']=pd.to_numeric(X['how_tall_in_meters'],errors='coerce')
X['body_mass_index']=pd.to_numeric(X['body_mass_index'],errors='coerce')
X['z4']=pd.to_numeric(X['z4'],errors='coerce')
X = X.dropna()
y = pd.get_dummies(X['class'])
X = X.drop(['user','class'],axis=1)
X.describe()
X[pd.isnull(X).any(axis=1)]
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(n_estimators=30,max_depth=10,oob_score=True,random_state=0)
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=7)
print("Fitting...")
s = time.time()

fit = model.fit(X_train,y_train)

print("Fitting completed in: ", time.time() - s)

score = model.oob_score_
print("OOB Score: ", round(score*100, 3))

print("Scoring...")
s = time.time()

score = model.score(X_test,y_test)

print("Score: ", round(score*100, 3))
print("Scoring completed in: ", time.time() - s)
